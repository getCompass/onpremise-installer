#!/usr/bin/env python3

import sys

sys.dont_write_bytecode = True

from pathlib import Path
import re, socket, yaml, argparse, readline, string, random, pwd, os

current_script_path = Path(__file__).parent
utils_path = current_script_path.parent.parent / 'script'
sys.path.append(str(utils_path))

from utils import scriptutils

scriptutils.assert_root()
script_dir = str(Path(__file__).parent.resolve())

# папка, где находятся конфиги
config_path = current_script_path.parent.parent / 'configs'

# если отсутствуют файлы-конфиги
if len(os.listdir(config_path)) == 0:
    print(
        scriptutils.warning(
            "Отсутствуют конфиг-файлы в директории configs/.. - миграция не требуется. Запустите скрипт create_configs.py для создания конфиг-файлов и заполните поля"
        )
    )
    exit(0)

auth_config_path = str(config_path) + "/auth.yaml"
if False == os.path.exists(auth_config_path):
    print(
        scriptutils.warning(
            "Отсутствует конфиг-файл auth.yaml в директории configs/.. - миграция не требуется. Запустите скрипт create_configs.py для создания конфиг-файлов и заполните поля"
        )
    )
    exit(0)

# если конфиг auth.yaml уже содержит свежие поля
with open(auth_config_path, "r") as file:
    # читаем содержимое файла
    content = file.read()

    # если в содержимом уже имеются новые поля, то ничего не делаем
    if "idigital.provide_phone_code_list" in content:
        print(scriptutils.success("Конфиг-файл auth.yaml выглядит актуальным, миграция не требуется."))
        exit(0)

# добавляем поля нового sms-провайдера
content = content.replace("""
# ----------------------------------------------
# SSO АВТОРИЗАЦИЯ
# ----------------------------------------------
""",
"""
# Настройки SMS-оператора i-Digital.

# Массив обслуживаемых префиксов. Система оперирует номерами в международном формате и
# при выборе оператора опирается на префикс номера. Данный параметр определяет список
# обслуживаемых провайдером префиксов. Например для обслуживания номеров казахстана необходимо
# указать префиксы "+796" и "+797", для белорусских "+375", а при обслуживании вообще
# всех номеров только "+".
#
# Тип данных: массив строк, пример: ["+796", "+797", "+375"]
idigital.provide_phone_code_list:

# Массив приоритетных обслуживаемых префиксов. Если один префикс закреплен за несколькими
# провайдерами, то система отдаст приоритет тому провайдеру, у которого префикс находится
# в списке приоритетных.
# Логика ввода значений аналогична логике поля provide_phone_code_list.
# Поле не является обязательным для заполнения.
#
# Тип данных: массив строк, пример: ["+796", "+797"]
idigital.high_priority_phone_code_list:

# Минимальный уровень баланса на счете оператора, после которого он перестает использоваться
# для рассылки SMS-сообщений. В большинстве случаев стоит оставить небольшой запас,
# чтобы счет не уходил в минус.
# В качестве валюты используется валюта счета, предоставленного SMS-провайдером.
#
# Тип данных: число
idigital.min_balance_value:

# Точка входа, куда система будет отправлять API-запросы для рассылки SMS-сообщений.
# В большинстве случаев адрес по умолчанию является актуальными и не требует изменений.
#
# Тип данных: строка
idigital.provider_gateway_url: "https://direct.i-dgtl.ru/api/v1/"

# Имя приложения, используемого при отправке сообщений.
# Для получателя SMS будет являться отправителем.
#
# Тип данных: строка
idigital.app_name:

# Ключ, который будет использоваться для авторизации в API SMS-провайдера.
# Ключ выдается при оформлении договора c SMS-провайдером.
# В документации подключения провайдера обозначен как API key.
#
# Тип данных: строка
idigital.api_header_key:


# ----------------------------------------------
# SSO АВТОРИЗАЦИЯ
# ----------------------------------------------
""")

# сохраняем изменения
auth_config = open(auth_config_path, "w")
auth_config.write(content)
auth_config.close()