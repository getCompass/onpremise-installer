version: '3.8'

# override конфигурация для монолитного деплоя
# определяет разницу конфига для локального окружения

## Используем тут идентификатор по умолчанию, в теории можно пройтись циклом и поднять все проекты,
## но там есть проблема — при деплое записывается имя проекта, ан е резолвится его идентификатор
{{$file_node := index .projects.file .file_node_id}}
## Такая же ситуация с домино — работаем только с домино по умолчанию
{{$domino := index .projects.domino .domino_id}}

# --- EXTENSIONS ---
# правила дефолтного деплоя для сервисов
# если нужно что-то поменять, то только через override-файл
x-default-deploy: &default-deploy
  deploy:
    replicas: 1
    restart_policy:
      condition: "any"
      window: "10s"
    update_config:
      order: "start-first"
      failure_action: "rollback"
      delay: "10s"
    rollback_config:
      parallelism: 0
      order: "stop-first"

# правила логирования для сервисов по умолчанию
# дефолтно просто пишем лог и ограничиваем его размер
x-log-rule-default: &log-rule-default
  logging:
    driver: "json-file"
    options:
      max-size: "15m"
      max-file: "3"

services:

  ## MONOLITH
  # MYSQL
  mysql-{{.projects.monolith.label}}:
    volumes:
      - "{{.root_mount_path}}/monolith/database:/var/lib/mysql"

  ## DOMINO PROJECT
  php-monolith-{{$domino.label}}:
    environment:
      AVAILABLE_DOMINO_TIER_CONFIG_LIST: |
        DOMINO_TIER_1 => DOMINO_TIER_1_MIN_ACTIVITY_USER_COUNT,
        DOMINO_TIER_2 => DOMINO_TIER_2_MIN_ACTIVITY_USER_COUNT,
        DOMINO_TIER_3 => DOMINO_TIER_3_MIN_ACTIVITY_USER_COUNT

  ## JANUS PROJECT
  ## Nginx
  nginx-{{.projects.janus.label}}:
    image: "{{.registry_service_path}}/nginx:master"
    networks:
      - "monolith-private"
    ports:
      - "{{.projects.janus.service.nginx.external_https_port}}:80"
    <<: *default-deploy
    <<: *log-rule-default
    configs:
      - source: "nginx-janus-sites"
        target: "/etc/nginx/sites-enabled/default"
      - source: "nginx-janus-conf"
        target: "/etc/nginx/nginx.conf"
      - source: "nginx-include-janus"
        target: "/etc/nginx/includes/janus.nginx"
    volumes:
      - "{{.root_mount_path}}/nginx/ssl:/etc/nginx/ssl/"

  ## Janus
  janus-{{.projects.janus.label}}:
    image: "{{.registry_service_path}}/janus:{{.projects.janus.service.janus.tag}}"
    depends_on:
      - "nginx-{{.projects.janus.label}}"
    networks:
      - "monolith-private"
    ports:
      - "{{.projects.janus.service.janus.port}}:8088"
      - "{{.projects.janus.service.janus.admin_port}}:7088"
      {{range $port := loop .projects.janus.service.janus.rtp_port_from .projects.janus.service.janus.rtp_port_to -}}
      - target: {{$port}}
        published: {{$port}}
        mode: "host"
        protocol: "udp"
      {{end}}
    <<: *default-deploy
    <<: *log-rule-default
    configs:
      - source: "janus"
        target: "/etc/janus/janus.jcfg"
      - source: "janus-transport-http"
        target: "/etc/janus/janus.transport.http.jcfg"
      - source: "janus-eventhandler-sampleevh"
        target: "/etc/janus/janus.eventhandler.sampleevh.jcfg"
      - source: "janus-plugin-videoroom"
        target: "/etc/janus/janus.plugin.videoroom.jcfg"

  # Coturn turn-сервер
  coturn:
    image: "coturn/coturn"
    networks:
      - "monolith-private"
    ports:
      - "{{.projects.janus.service.coturn.external_port}}:3478"
      - "{{.projects.janus.service.coturn.external_port}}:3478/udp"
      - "{{.projects.janus.service.coturn.external_tls_port}}:5349"
      - "{{.projects.janus.service.coturn.external_tls_port}}:5349/udp"
      {{range $port := loop .projects.janus.service.coturn.exchange_port_from .projects.janus.service.coturn.exchange_port_to -}}
      - target: {{$port}}
        published: {{$port}}
        mode: "host"
        protocol: "udp"
      {{end}}
    volumes:
      - "{{.root_mount_path}}/nginx/ssl:/etc/turnserver/cert"
    configs:
      - source: "coturn"
        target: "/etc/turnserver/turnserver.conf"

  ## php_janus
  php-janus-{{.projects.janus.label}}:
    image: "{{.registry_compass_path}}/php_janus:{{.projects.janus.service.php_janus.tag}}"
    depends_on:
      - "janus-{{.projects.janus.label}}"
      - "nginx-{{.projects.janus.label}}"
    networks:
      - "monolith-private"
    volumes:
      - "/etc/ssl/certs:/etc/ssl/certs:ro"
    env_file:
      - ".global.common.env"
      - ".project.janus.php_janus.env"
    <<: *default-deploy
    <<: *log-rule-default
    healthcheck:
      test: "nc -z 127.0.0.1 9000"
      interval: "10s"
      timeout: "120s"
      retries: 10
