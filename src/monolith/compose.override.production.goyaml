version: '3.8'

# override конфигурация для монолитного деплоя
# определяет разницу конфига для production окружения

## Используем тут идентификатор по умолчанию, в теории можно пройтись циклом и поднять все проекты,
## но там есть проблема — при деплое записывается имя проекта, ан е резолвится его идентификатор
{{$file_node := index .projects.file .file_node_id}}
## Такая же ситуация с домино — работаем только с домино по умолчанию
{{$domino := index .projects.domino .domino_id}}

# --- EXTENSIONS ---
# правила дефолтного деплоя для сервисов
# если нужно что-то поменять, то только через override-файл
x-default-deploy: &default-deploy
  deploy:
    replicas: 1
    restart_policy:
      condition: "any"
      window: "10s"
    update_config:
      order: "start-first"
      failure_action: "continue"
      delay: "10s"
    rollback_config:
      parallelism: 0
      order: "stop-first"

# правила логирования для сервисов по умолчанию
# дефолтно просто пишем лог и ограничиваем его размер
x-log-rule-default: &log-rule-default
  logging:
    driver: "json-file"
    options:
      max-size: "15m"
      max-file: "3"

volumes:
  jitsi-custom-web-{{.projects.jitsi.tag}}:

services:

  ## MONOLITH
  # MYSQL
  mysql-{{.projects.monolith.label}}:
    volumes:
      - "{{.root_mount_path}}/monolith/database:/var/lib/mysql"

  ## DOMINO PROJECT
  php-monolith-{{$domino.label}}:
    environment:
      AVAILABLE_DOMINO_TIER_CONFIG_LIST: |
        DOMINO_TIER_1 => DOMINO_TIER_1_MIN_ACTIVITY_USER_COUNT,
        DOMINO_TIER_2 => DOMINO_TIER_2_MIN_ACTIVITY_USER_COUNT,
        DOMINO_TIER_3 => DOMINO_TIER_3_MIN_ACTIVITY_USER_COUNT

  # кастомизация jitsi
  jitsi-custom-{{.projects.jitsi.label}}:
    image: "{{.registry_compass_path}}/jitsi_custom:{{.projects.jitsi.tag}}"
    volumes:
     - "jitsi-custom-web-{{.projects.jitsi.tag}}:/jitsi-meet-dist/jitsi-meet/"
    deploy:
     replicas: 1
     restart_policy:
       condition: "none"

  # Frontend
  web-{{.projects.jitsi.label}}:
    image: "{{.registry_service_path}}/web:web-1.0.7968-1"
    ports:
      - '{{.projects.jitsi.service.web.https_port}}:443'
    env_file:
      - ".project.jitsi.common.env"
    configs:
      - source: "web-config-js"
        target: "/config/config.js"
      - source: "web-interface-config-js"
        target: "/config/interface_config.js"
      - source: "web-nginx-meet-conf"
        target: "/config/nginx/meet.conf"
    volumes:
      - type: "volume"
        source: "jitsi-custom-web-{{.projects.jitsi.tag}}"
        target: "/usr/share/jitsi-meet-custom"
        read_only: true
      - "{{.root_mount_path}}/nginx/ssl/{{.projects.jitsi.host}}.key:/config/keys/cert.key"
      - "{{.root_mount_path}}/nginx/ssl/{{.projects.jitsi.host}}.crt:/config/keys/cert.crt"
    networks:
      - "monolith-private"
    depends_on:
      - jvb-{{.projects.jitsi.label}}
      - jitsi-custom-{{.projects.jitsi.label}}

  # Video bridge
  jvb-{{.projects.jitsi.label}}:
    image: "{{.registry_service_path}}/jvb:stable-9364-1"
    ports:
      - target: {{.projects.jitsi.service.jvb.media_port}}
        published: {{.projects.jitsi.service.jvb.media_port}}
        mode: "host"
        protocol: "udp"
    env_file:
      - ".project.jitsi.common.env"
    depends_on:
      - prosody-{{.projects.jitsi.label}}
    networks:
      monolith-private:

  # XMPP server
  prosody-{{.projects.jitsi.label}}:
    image: "{{.registry_compass_path}}/jitsi_prosody:{{.projects.jitsi.tag}}"
    expose:
      - '5222'
      - '5269'
      - '5347'
      - '5280'
    ports:
      - '{{.projects.jitsi.service.prosody.serve_port}}:5280'
    configs:
      - source: "prosody-main-cfg"
        target: "/config/conf.d/jitsi-meet.cfg.lua"
      - source: "prosody-esync-plugin-cfg"
        target: "/config/conf.d/esync.jitsi-meet.cfg.lua"
      - source: "prosody-rest-api-plugin-cfg"
        target: "/config/conf.d/rest-api.jitsi-meet.cfg.lua"
      - source: "prosody-persistent-lobby-cfg"
        target: "/config/conf.d/persistent-lobby.jitsi-meet.cfg.lua"
    env_file:
      - ".project.jitsi.common.env"
    networks:
      monolith-private:
        aliases:
           - xmpp.meet.jitsi

  # Focus component
  jicofo-{{.projects.jitsi.label}}:
    image: "{{.registry_service_path}}/jicofo:stable-9364-1"
    ports:
      - '{{.projects.jitsi.service.jicofo.port}}:8888'
    env_file:
      - ".project.jitsi.common.env"
    depends_on:
      - prosody-{{.projects.jitsi.label}}
    networks:
        monolith-private:

  # jitsi_web
  jitsi_web:
    image: "{{.registry_compass_path}}/jitsi_web:{{.projects.jitsi_web.service.jitsi_web.tag}}"
    ports:
      - "{{.projects.jitsi_web.service.jitsi_web.external_port}}:80"
    env_file:
      - ".project.jitsi_web.common.env"
    networks:
      - "monolith-private"
    healthcheck:
      test: "nc -z 127.0.0.1 80"
      interval: "10s"
      timeout: "1s"
      retries: 30
    deploy:
      replicas: 1
      restart_policy:
        condition: "any"
        window: "10s"
      update_config:
        order: "start-first"
        failure_action: "rollback"
        delay: "10s"
      rollback_config:
        parallelism: 0
        order: "stop-first"
    configs:
      - source: "jitsi-web-nginx-conf"
        target: "/etc/nginx/nginx.conf"
      - source: "jitsi-web-nginx-sites"
        target: "/etc/nginx/sites-enabled/jitsi_web"
