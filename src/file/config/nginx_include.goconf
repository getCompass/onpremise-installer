{{$file_node := index .projects.file .file_node_id}}
{{$locprefix := locprefix .url_path $file_node.url_path -}}

set $upstream_file_node php-file-node-{{$file_node.label}}:9000;
set $upstream_file_auth go-file-auth-{{$file_node.label}}:1000;

{{- if eq .file_access_restriction_mode "auth"}}
location /auth {

	internal;
	proxy_pass http://$upstream_file_auth/fileauthz/check?token=$token&original=$original_uri;
}
{{- end}}

########################################################
# СТАТИКА, НАДЕЕМСЯ, ЧТО ОНО НЕ ПЕРЕСЕЧЕТСЯ С БАЛАНСЕРОМ
########################################################
location {{$locprefix}}/files/ {

	{{- if eq .file_access_restriction_mode "auth"}}
	auth_request /auth;
	{{- end}}

	# перенаправляем в примаунченную папку, где хранятся файлы
	root /home;
	rewrite ^{{$locprefix}}/([^?]*) /$1 break;

	# отключаем gzip чтобы в ответе возвращался content-length
	gzip off;

	# кэшируем файлы
	open_file_cache max=10000 inactive=600s; # максимальное количество файлов
	open_file_cache_valid 600s; # сколько хранить файл в кэше
	open_file_cache_min_uses 1; # количество обращений к файлу, чтобы он закэшировался
	open_file_cache_errors on; # кэшировать отсутствующие файлы

	# оптимизируем чтение файлов
	aio                     threads;
	sendfile                on;
	sendfile_max_chunk      1m;
	directio                10m;
	output_buffers          128 384k;

	# кэшируем файлы на клиенте
	add_header Cache-Control public;
	expires 7d;

	# механизм eTag
	if_modified_since before;
	etag on;

	# для видеозаписей
	location ~* \.(mp4|mov)$ {

		rewrite ^{{$locprefix}}/([^?]*) /$1 break;

		# отключаем open_file_cache
		# существует баг, из-за которого nginx будет отдавать 500 Internal Server Error
		# при попытке закэшировать mp4 и включенном модуле mp4
		open_file_cache off;
		aio             threads;
		sendfile        on;
		tcp_nodelay     on;
		tcp_nopush      on;
		directio 	off;
		gzip 		off;

		mp4;
		mp4_buffer_size     20m;
		mp4_max_buffer_size 40m;
	}
}

################################
# ЗАГРУЗКА ФАЙЛОВ
################################
location = {{$locprefix}}/api/v1/files/tryUpload {

	# разрешаем только POST запросы
	limit_except POST {
		deny all;
	}

	set $upload_field_name "file";

	reset_timedout_connection off;
	default_type  application/octet-stream;
	gzip off;

	# upload file
	upload_pass @uploader;

	# Store files to this directory
	upload_store /tmp/files/;
	upload_store_access user:rw group:rw all:rw;
	upload_max_file_size 256m;

	# Set specified fields in request body
	upload_set_form_field $upload_field_name.name "$upload_file_name";
	upload_set_form_field $upload_field_name.content_type "$upload_content_type";
	upload_set_form_field $upload_field_name.path "$upload_tmp_path";

	upload_pass_form_field "^token$";

	upload_cleanup 400 404 500-599;
}

# путь к скрипту который выполнится после полной загрузки файла
location @uploader {

	root /app/www/;
	index index.php;

	rewrite {{$locprefix}}/api/v1/files/tryUpload /api/v1/index.php?$args&api_method=files.tryUpload? break;
	fastcgi_pass $upstream_file_node;
}

# загрузка файлов по частям
location = {{$locprefix}}/api/v1/files/tryPartialUpload {

	# разрешаем только POST запросы
	limit_except POST {
		deny all;
	}

	set $upload_field_name "file";
	reset_timedout_connection off;
	default_type  application/octet-stream;
	gzip off;

	# upload file
	upload_resumable on;
	upload_pass @chunkuploader;
	upload_pass_args on;

	# Store files to this directory
	upload_store /tmp/files;
	upload_state_store /tmp/chunks;
	upload_store_access user:rw group:rw all:rw;
	upload_max_file_size 256m;

	# Set specified fields in request body
	upload_set_form_field $upload_field_name.name "$upload_file_name";
	upload_set_form_field $upload_field_name.content_type "$upload_content_type";
	upload_set_form_field $upload_field_name.path "$upload_tmp_path";
	upload_set_form_field "token" "$http_x_token";
	upload_set_form_field "sha1_hash" "$http_x_sha1_hash";

	upload_cleanup 400 404 500-599;
}

# путь к скрипту который выполнится после полной загрузки файла
location @chunkuploader {

	root /app/www/;
	index index.php;

	rewrite /api/v1/files/tryPartialUpload /api/v1/index.php?$args&api_method=files.tryPartialUpload? break;
	fastcgi_pass $upstream_file_node;
}

################################
# API-МЕТОДЫ
################################

# файловая нода — api v1
location ~* ^{{$locprefix}}/api/v1/[a-zA-Z0-9_\-]+/[a-zA-Z0-9_\-]+/?$ {

	root /app/www/;
	index index.php;

	# разрешаем только POST запросы
	limit_except POST {
		deny all;
	}

	rewrite ^{{$locprefix}}/api/v1/([a-zA-Z0-9_\-]+)/([a-zA-Z0-9_\-]+)/?$ /api/v1/index.php?$args&api_method=$1.$2? break;
	fastcgi_pass $upstream_file_node;
}

# файловая нода — socket методы
# здесь есть косяк и его надо исправить как-то — путь
# не включает в себя имя модуля, из-за чего отличается
# от других сокет-эндпоинтов
location {{$locprefix}}/api/socket/ {

	root /app/www/;
	index index.php;

	# разрешаем только POST запросы
	limit_except POST {
		deny all;
	}

	rewrite ^ /api/socket/ break;
	fastcgi_pass $upstream_file_node;
}

# файловая нода — integration методы
location {{$locprefix}}/api/integration/ {

	root /app/www/;
	index index.php;

	# разрешаем только POST запросы
	limit_except POST {
		deny all;
	}

	rewrite ^ /api/integration/ break;
	fastcgi_pass $upstream_file_node;
}

# файловая нода — userbot точка входа
location ~* ^{{$locprefix}}/api/userbot/[a-zA-Z0-9_\-]+/[a-zA-Z0-9_\-]+/?$ {

	root /app/www/;
	index index.php;

	# разрешаем только POST запросы
	limit_except POST {
		deny all;
	}

	rewrite ^{{$locprefix}}/api/userbot/([a-zA-Z0-9_\-]+)/([a-zA-Z0-9_\-]+)/?$ /api/userbot/index.php?$args&api_method=$1.$2? break;
	fastcgi_pass $upstream_file_node;
}

################################
# ДРУГОЕ
################################

# favicon
location = {{$locprefix}}/favicon.ico {

	return 204;
	access_log off;
	log_not_found off;
}

# на все остальное смело отвечаем 404
location {{$locprefix}}/ {

	log_not_found off;
	return 404;
}