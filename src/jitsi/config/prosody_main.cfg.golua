admins = {
    "focus@auth.meet.jitsi",
    "jvb@auth.meet.jitsi"
}

unlimited_jids = {
    "focus@auth.meet.jitsi",
    "jvb@auth.meet.jitsi"
}

plugin_paths = { "/prosody-plugins/", "/prosody-custom-plugins" }

muc_mapper_domain_base = "meet.jitsi";
muc_mapper_domain_prefix = "conference";

http_default_host = "meet.jitsi"
asap_accepted_issuers = { "{{.projects.jitsi.jwt.app_issuer}}" }
asap_accepted_audiences = { "{{.projects.jitsi.jwt.app_audience}}" }

-- конфигурирование используемых TURN серверов
external_service_secret = "{{.projects.jitsi.service.turn.secret}}"; -- secret ключ TURN сервера
external_services = {
     { type = "stun", host = "{{.projects.jitsi.service.turn.host}}", port = {{.projects.jitsi.service.turn.port}} },
     {{if contains .projects.jitsi.service.turn.use_protocols "udp" }}{ type = "turn", host = "{{.projects.jitsi.service.turn.host}}", port = {{.projects.jitsi.service.turn.tls_port}}, transport = "udp", secret = true, ttl = 86400, algorithm = "turn" },{{end}}
     {{if contains .projects.jitsi.service.turn.use_protocols "tcp" }}{ type = "turns", host = "{{.projects.jitsi.service.turn.host}}", port = {{.projects.jitsi.service.turn.tls_port}}, transport = "tcp", secret = true, ttl = 86400, algorithm = "turn" },{{end}}
};

consider_bosh_secure = true;
consider_websocket_secure = true;

VirtualHost "meet.jitsi"
    authentication = "token"
    app_id = "{{.projects.jitsi.jwt.app_id}}"
    app_secret = "{{.projects.jitsi.jwt.app_secret}}"
    allow_empty_token = false
    enable_domain_verification = false

    ssl = {
        key = "/config/certs/meet.jitsi.key";
        certificate = "/config/certs/meet.jitsi.crt";
    }
    modules_enabled = {
        "bosh";
        "speakerstats";
        "conference_duration";
        "room_metadata";
        "end_conference";
        "muc_lobby_rooms";
        "muc_breakout_rooms";
        "av_moderation";
	"external_services";
        "visitors";
    }

    main_muc = "conference.meet.jitsi"
    room_metadata_component = "metadata.meet.jitsi"
    lobby_muc = "lobby.meet.jitsi"
    breakout_rooms_muc = "breakout.meet.jitsi"
    speakerstats_component = "speakerstats.meet.jitsi"
    conference_duration_component = "conferenceduration.meet.jitsi"
    end_conference_component = "endconference.meet.jitsi"
    av_moderation_component = "avmoderation.meet.jitsi"
    c2s_require_encryption = true

Component "visitors.meet.jitsi" "visitors_component"
    auto_allow_visitor_promotion = false
    muc_domains = { "conference.meet.jitsi" }
    main_muc = "conference.meet.jitsi"
    muc_component = "conference.meet.jitsi"
    admins = { "focus@auth.meet.jitsi" }

VirtualHost "auth.meet.jitsi"
    ssl = {
        key = "/config/certs/auth.meet.jitsi.key";
        certificate = "/config/certs/auth.meet.jitsi.crt";
    }
    modules_enabled = {
        "limits_exception";
    }
    authentication = "internal_hashed"

Component "internal-conference.meet.jitsi" "muc"
    storage = "memory"
    modules_enabled = {
        }
    restrict_room_creation = true
    muc_filter_whitelist="auth.meet.jitsi"
    muc_room_locking = false
    muc_room_default_public_jids = true
    muc_room_cache_size = 1000
    muc_tombstones = false
    muc_room_allow_persistent = false

Component "conference.meet.jitsi" "muc"
    restrict_room_creation = true
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "token_moderation";
        "rest_api";
        "persistent_lobby";
        "token_lobby_bypass";
        "token_verification";

        "polls";
        "muc_domain_mapper";

        "muc_password_whitelist";
    }

    -- The size of the cache that saves state for IP addresses
    rate_limit_cache_size = 10000;

    muc_room_cache_size = 10000
    muc_room_locking = false
    muc_room_default_public_jids = true

    muc_password_whitelist = {
        "focus@auth.meet.jitsi";
    }
    muc_tombstones = false
    muc_room_allow_persistent = false

Component "focus.meet.jitsi" "client_proxy"
    target_address = "focus@auth.meet.jitsi"

Component "speakerstats.meet.jitsi" "speakerstats_component"
    muc_component = "conference.meet.jitsi"

Component "conferenceduration.meet.jitsi" "conference_duration_component"
    muc_component = "conference.meet.jitsi"

Component "endconference.meet.jitsi" "end_conference"
    muc_component = "conference.meet.jitsi"

Component "avmoderation.meet.jitsi" "av_moderation_component"
    muc_component = "conference.meet.jitsi"

Component "lobby.meet.jitsi" "muc"
    storage = "memory"
    restrict_room_creation = true
    muc_tombstones = false
    muc_room_allow_persistent = false
    muc_room_cache_size = 10000
    muc_room_locking = false
    muc_room_default_public_jids = true
    modules_enabled = {
        }

Component "breakout.meet.jitsi" "muc"
    storage = "memory"
    restrict_room_creation = true
    muc_room_cache_size = 10000
    muc_room_locking = false
    muc_room_default_public_jids = true
    muc_tombstones = false
    muc_room_allow_persistent = false
    modules_enabled = {
        "muc_meeting_id";
        "polls";
        }

Component "metadata.meet.jitsi" "room_metadata_component"
    muc_component = "conference.meet.jitsi"
    breakout_rooms_component = "breakout.meet.jitsi"


